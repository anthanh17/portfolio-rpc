syntax = "proto3";
import "google/protobuf/wrappers.proto";

package rd_portfolio_rpc;
option go_package="./rd-portfolio-rpc";

message Request {
  string ping = 1;
}

message Response {
  string pong = 1;
}

message TickerInfo {
  string name = 1;
  string company_name = 2;
  double allocation = 3;
}

message Portfolio {
  repeated TickerInfo tickers = 1;
  double expected_return = 2;
  double standard_deviation = 3;
  double sharpe_ratio = 4;
}
message Value {
  repeated double values = 1;
}

message Row {
  repeated string headers = 1;
  repeated Value values = 2;
}

message Asset {
  string asset = 1;
  double min_weight = 2;
  double max_weight = 3;
  double expected_return = 4;
  double standard_deviation = 5;
  double sharpe_ratio = 6;
}

message GetPortfolioOptReq {
  string po_id = 1;
  string user_id = 2;
}

message CreatePortfolioOptReq {}

message CreatePortfolioOptRes {}

message GetPortfolioOptsReq {}

message GetPortfolioOptsRes {}

message GetPortfolioOptRes {
  string portfolio_type = 1;
  optional Portfolio provided_portfolio = 2;
  optional Portfolio max_sharpe_ratio_portfolio = 3;
  optional Row opt_portfolios = 4;
  optional Row corr_matrix = 5;
  optional Row cml = 6;
  repeated Asset assets = 7;
  optional Row portfolios = 8;
  string user_id = 9;
}

message PortfolioAsset {
  google.protobuf.StringValue ticker_name = 1;
  google.protobuf.DoubleValue allocation = 2;
  google.protobuf.DoubleValue price = 3;
}

message CreatePortfolioProfileRequest {
  string name = 1;
  string privacy = 2;
  string author_id = 3;
  repeated string advisors = 4;
  repeated string branches = 5;
  repeated string organizations = 6;
  repeated string accounts = 7;
  double expected_return = 8;
  bool is_new_buy_point = 9;
  repeated PortfolioAsset assets = 10;
  repeated string hashtags = 11;
}

message CreatePortfolioProfileResponse {
  string profile_id = 1;
}

message UpdatePortfolioProfileRequest {
  string profile_id = 1;
  google.protobuf.StringValue name = 2;
  google.protobuf.StringValue privacy = 3;
  repeated google.protobuf.StringValue advisors = 4;
  repeated google.protobuf.StringValue branches = 5;
  repeated google.protobuf.StringValue organizations = 6;
  repeated google.protobuf.StringValue accounts = 7;
  google.protobuf.DoubleValue expected_return = 8;
  google.protobuf.BoolValue is_new_buy_point = 9;
  repeated PortfolioAsset assets = 10;
  repeated google.protobuf.StringValue hashtags = 11;
}

message UpdatePortfolioProfileResponse {
  bool status = 1;
}

message DeletePortfolioProfileRequest {
  string profile_id = 1;
}

message DeletePortfolioProfileResponse {
  bool status = 1;
}

message GetProfileByUserIDRequest {
  string user_id = 1;
  uint64 page = 2;
  uint64 size = 3;
}

message TProfileValue  {
  repeated string headers = 1;
  repeated double values = 2;
}

message Author  {
  string id = 1;
  string name = 2;
}

message TProfile {
  string id = 1;
  string name = 2;
  TProfileValue charts = 3;
  string privacy = 4;
  string author = 5;
  uint64 total_return = 6;
  uint64 updated_at = 7;
  uint64 created_at = 8;
  double expected_return = 9;
  bool is_new_buy_point = 10;
  double profit_and_loss = 11;
  uint64 stars = 12;
  uint64 follows = 13;
  uint64 copies = 14;
  repeated string hashtags = 15;
}


message GetProfileByUserIDResponse {
  repeated TProfile data = 1;
  uint64 total = 2;
  uint64 current_page = 3;
  uint64 total_pages = 4;
}



message TCProfile {
  string id = 1;
  string name = 2;
  TProfileValue charts = 3;
  string privacy = 4;
  string author_id = 5;
  uint64 total_return = 6;
  uint64 created_at = 7;
  uint64 updated_at = 8;
}

message ObjInfo {
  string id = 1;
  string name = 2;
}

message GetDetailProfileRequest {
  string profile_id = 1;
}

message AssetInfo {
  string ticker_name = 1;
  string description = 2;
  double allocation = 3;
}

message GetDetailProfileResponse {
  string id = 1;
  string name = 2;
  string privacy = 3;
  ObjInfo author = 4;
  repeated string advisors = 5;
  repeated string branches = 6;
  repeated string organizations = 7;
  repeated string accounts = 8;
  uint64 number_linked_accounts = 9;
  repeated AssetInfo assets = 10;
  double expected_return = 11;
  bool is_new_buy_point = 12;
  double profit_and_loss = 13;
  uint64 created_at = 14;
  uint64 updated_at = 15;
  repeated string hashtags = 16;
  uint64 stars = 17;
  uint64 follows = 18;
  uint64 copies = 19;
}

message LinkedProfileToListAccountsRequest {
  string profile_id = 1;
  repeated string account_ids = 2;
}

message LinkedProfileToListAccountsResponse {
  bool status = 1;
}

message UnLinkedProfileToListAccountsRequest {
  string profile_id = 1;
  repeated string account_ids = 2;
}

message UnLinkedProfileToListAccountsResponse {
  bool status = 1;
}

message GetListLinkedProfileAccountsRequest {
  string profile_id = 1;
  uint64 page = 3;
  uint64 size = 4;
}

message Chart {
  string name = 1;
  uint64 portfolio_profile = 2;
  uint64 sp_asx = 3;
}

message LinkedAccounts {
  string account_id = 1;
  string account_name = 2;
  repeated Chart charts = 3;
}

message GetListLinkedProfileAccountsResponse {
  uint64 total = 1;
  uint64 current_page = 2;
  uint64 total_pages = 3;
  repeated LinkedAccounts data = 4;
}

service RdPortfolioRpc {
  rpc Ping(Request) returns(Response);
  // Portfolio optimization
  rpc GetOpt(GetPortfolioOptReq) returns(GetPortfolioOptRes);
  rpc CreateOpt(CreatePortfolioOptReq) returns(CreatePortfolioOptRes);
  rpc GetOpts(GetPortfolioOptsReq) returns(GetPortfolioOptsRes);

  rpc CreatePortfolioProfile (CreatePortfolioProfileRequest) returns (CreatePortfolioProfileResponse) {}
  rpc UpdatePortfolioProfile (UpdatePortfolioProfileRequest) returns (UpdatePortfolioProfileResponse) {}
  rpc DeletePortfolioProfile (DeletePortfolioProfileRequest) returns (DeletePortfolioProfileResponse) {}

  rpc GetProfileByUserID (GetProfileByUserIDRequest) returns (GetProfileByUserIDResponse) {}
  rpc GetDetailProfile (GetDetailProfileRequest) returns (GetDetailProfileResponse) {}

  rpc LinkedProfileToListAccounts (LinkedProfileToListAccountsRequest) returns (LinkedProfileToListAccountsResponse) {}
  rpc UnLinkedProfileToListAccounts (UnLinkedProfileToListAccountsRequest) returns (UnLinkedProfileToListAccountsResponse) {}
  rpc GetListLinkedProfileAccounts (GetListLinkedProfileAccountsRequest) returns (GetListLinkedProfileAccountsResponse) {}
}
